name: Infrastructure Management

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

env:
  TF_VERSION: '1.6.0'

jobs:
  # Terraform Validation
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive terraform/
    
    - name: Terraform Init and Validate
      run: |
        for env in dev staging prod; do
          echo "Validating $env environment..."
          cd terraform/environments/$env
          terraform init -backend=false
          terraform validate
          cd ../../..
        done
    
    - name: Run tfsec security scan
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        working_directory: terraform/
        soft_fail: true

  # Plan Infrastructure Changes
  plan:
    name: Plan Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Terraform Init
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform init
    
    - name: Terraform Plan
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform plan -no-color -out=tfplan
      env:
        TF_VAR_environment: ${{ matrix.environment }}
    
    - name: Save Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan-${{ matrix.environment }}
        path: terraform/environments/${{ matrix.environment }}/tfplan

  # Apply Infrastructure (Production only on main branch)
  apply:
    name: Apply Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: infrastructure
    
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Terraform Init
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform init
    
    - name: Terraform Apply
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform apply -auto-approve
      env:
        TF_VAR_environment: ${{ matrix.environment }}
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_cluster_name: skillpath-${{ matrix.environment }}
    
    - name: Output Infrastructure Info
      run: |
        cd terraform/environments/${{ matrix.environment }}
        terraform output -json > infrastructure-outputs.json
    
    - name: Upload Infrastructure Outputs
      uses: actions/upload-artifact@v3
      with:
        name: infrastructure-outputs-${{ matrix.environment }}
        path: terraform/environments/${{ matrix.environment }}/infrastructure-outputs.json